def write_macros(handle):
    handle.write("#define INPUT_PAIR_TYPE std::pair<std::string_view, std::string_view>\n")
    handle.write("#define INPUT_PAIR(arg1, arg2) INPUT_PAIR_TYPE{arg1, arg2}\n")
    handle.write("#define VALUES2_0(arg1, arg2) INPUT_PAIR(arg1, arg2)\n")
    handle.write("#define VALUES2_1(arg1, arg2, ...) INPUT_PAIR(arg1, arg2) __VA_OPT__(, VALUES2_0(__VA_ARGS__))\n")
    handle.write("#define VALUES2_2(arg1, arg2, ...) INPUT_PAIR(arg1, arg2) __VA_OPT__(, VALUES2_1(__VA_ARGS__))\n")
    handle.write("#define VALUES2_3(arg1, arg2, ...) INPUT_PAIR(arg1, arg2) __VA_OPT__(, VALUES2_2(__VA_ARGS__))\n")
    handle.write("#define VALUES2_4(arg1, arg2, ...) INPUT_PAIR(arg1, arg2) __VA_OPT__(, VALUES2_3(__VA_ARGS__))\n")
    handle.write("#define VALUES2_5(arg1, arg2, ...) INPUT_PAIR(arg1, arg2) __VA_OPT__(, VALUES2_4(__VA_ARGS__))\n")
    handle.write("#define VALUES2_6(arg1, arg2, ...) INPUT_PAIR(arg1, arg2) __VA_OPT__(, VALUES2_5(__VA_ARGS__))\n")
    handle.write("#define VALUES2_7(arg1, arg2, ...) INPUT_PAIR(arg1, arg2) __VA_OPT__(, VALUES2_6(__VA_ARGS__))\n")
    handle.write("#define VALUES2_8(arg1, arg2, ...) INPUT_PAIR(arg1, arg2) __VA_OPT__(, VALUES2_7(__VA_ARGS__))\n")
    handle.write("#define VALUES2_9(arg1, arg2, ...) INPUT_PAIR(arg1, arg2) __VA_OPT__(, VALUES2_8(__VA_ARGS__))\n")
    handle.write("#define VALUES2_10(arg1, arg2, ...) INPUT_PAIR(arg1, arg2) __VA_OPT__(, VALUES2_9(__VA_ARGS__))\n")
    handle.write("#define VALUES2_11(arg1, arg2, ...) INPUT_PAIR(arg1, arg2) __VA_OPT__(, VALUES2_10(__VA_ARGS__))\n")
    handle.write("#define VALUES2_12(arg1, arg2, ...) INPUT_PAIR(arg1, arg2) __VA_OPT__(, VALUES2_11(__VA_ARGS__))\n")
    handle.write("#define VALUES2_13(arg1, arg2, ...) INPUT_PAIR(arg1, arg2) __VA_OPT__(, VALUES2_12(__VA_ARGS__))\n")
    handle.write("#define VALUES2_14(arg1, arg2, ...) INPUT_PAIR(arg1, arg2) __VA_OPT__(, VALUES2_13(__VA_ARGS__))\n")
    handle.write("#define VALUES2_15(arg1, arg2, ...) INPUT_PAIR(arg1, arg2) __VA_OPT__(, VALUES2_14(__VA_ARGS__))\n")
    handle.write("#define VALUES2_16(arg1, arg2, ...) INPUT_PAIR(arg1, arg2) __VA_OPT__(, VALUES2_15(__VA_ARGS__))\n")
    handle.write("#define INITILIAZER(...) { VALUES2_16(__VA_ARGS__) }\n")
